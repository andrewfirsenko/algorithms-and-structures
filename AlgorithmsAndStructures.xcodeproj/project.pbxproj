// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 77;
	objects = {

/* Begin PBXFileReference section */
		490A26EA2D685F0200A503FA /* Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Valid Parentheses.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4910F9F52D8181F100AA50D7 /* 2529. Maximum Count of Positive Integer and Negative Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2529. Maximum Count of Positive Integer and Negative Integer.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4910FA1D2D82C2F600AA50D7 /* 3356. Zero Array Transformation II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3356. Zero Array Transformation II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4910FA452D873FC100AA50D7 /* 2594. Minimum Time to Repair Cars.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2594. Minimum Time to Repair Cars.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4910FA942D881C5800AA50D7 /* 2206. Divide Array Into Equal Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2206. Divide Array Into Equal Pairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4910FABC2D8976C100AA50D7 /* 2401. Longest Nice Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2401. Longest Nice Subarray.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4910FB0B2D8EEF9600AA50D7 /* 1765. Map of Highest Peak.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1765. Map of Highest Peak.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491381512D6AF7C600D9F82B /* Evaluate Reverse Polish Notation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Evaluate Reverse Polish Notation.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491381522D6C468300D9F82B /* Number of Islands (DFS).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Number of Islands (DFS).playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491381892D6C599600D9F82B /* MergeSortAndCountInv.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = MergeSortAndCountInv.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4913828A2D703CFF00D9F82B /* CloneGraph.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = CloneGraph.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4913829D2D703D2200D9F82B /* Target Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Target Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491382D42D71A73000D9F82B /* Binary Tree Inorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Inorder Traversal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491965852D78378A00197DCD /* 2579. Count Total Number of Colored Cells.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2579. Count Total Number of Colored Cells.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491965AE2D784F6700197DCD /* Flood Fill.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Flood Fill.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491965D62D799E4B00197DCD /* 2965. Find Missing and Repeated Values.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2965. Find Missing and Repeated Values.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491965FE2D7AFCB500197DCD /* 2523. Closest Prime Numbers in Range.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2523. Closest Prime Numbers in Range.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491966262D7B84E000197DCD /* 01 Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "01 Matrix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4919664E2D7C22CB00197DCD /* 2379. Minimum Recolors to Get K Consecutive Black Blocks.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2379. Minimum Recolors to Get K Consecutive Black Blocks.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		491966762D7D7A4100197DCD /* 3208. Alternating Groups II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3208. Alternating Groups II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4919669E2D7EDB0600197DCD /* 3306. Count of Substrings Containing Every Vowel and K Consonants II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3306. Count of Substrings Containing Every Vowel and K Consonants II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		492232F12D578DDC00084FB1 /* 712.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = 712.hpp; sourceTree = "<group>"; };
		492232F22D578DDC00084FB1 /* 712.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = 712.cpp; sourceTree = "<group>"; };
		492232F42D578DDC00084FB1 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		492233292D578DDC00084FB1 /* binary_search.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = binary_search.hpp; sourceTree = "<group>"; };
		4922332A2D578DDC00084FB1 /* binary_search.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = binary_search.cpp; sourceTree = "<group>"; };
		4922332C2D578DDC00084FB1 /* linear_search.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = linear_search.hpp; sourceTree = "<group>"; };
		4922332D2D578DDC00084FB1 /* linear_search.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = linear_search.cpp; sourceTree = "<group>"; };
		4922332F2D578DDC00084FB1 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		492233312D578DDC00084FB1 /* merge_sort.hpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.h; path = merge_sort.hpp; sourceTree = "<group>"; };
		492233322D578DDC00084FB1 /* merge_sort.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = merge_sort.cpp; sourceTree = "<group>"; };
		492233342D578DDC00084FB1 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		492233352D578DDC00084FB1 /* MergeSort.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = MergeSort.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49360E1B2D918A51009C8F4D /* 3169. Count Days Without Meetings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3169. Count Days Without Meetings.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		493EF6AF2D69A9B300BB4E5E /* Daily Temperatures.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Daily Temperatures.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		495D0CC62D5A05DC00BB9C8E /* 3174. Clear Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3174. Clear Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		495D0CFD2D5B5EE200BB9C8E /* 1910. Remove All Occurrences of a Substring.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1910. Remove All Occurrences of a Substring.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		495D0D342D5CA24100BB9C8E /* 2342. Max Sum of a Pair With Equal Sum of Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2342. Max Sum of a Pair With Equal Sum of Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		495D0D742D5DE18100BB9C8E /* 3066. Minimum Operations to Exceed Threshold Value II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3066. Minimum Operations to Exceed Threshold Value II.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670EC62DBCB84200BEF440 /* 13. Roman to Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "13. Roman to Integer.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670EEE2DBD1CA000BEF440 /* 841. Keys and Rooms.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "841. Keys and Rooms.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F162DBF6AC600BEF440 /* 485. Max Consecutive Ones.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "485. Max Consecutive Ones.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F172DBF6B0400BEF440 /* 1295. Find Numbers with Even Number of Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1295. Find Numbers with Even Number of Digits.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F182DBF6B3B00BEF440 /* 977. Squares of a Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "977. Squares of a Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F192DC0989400BEF440 /* 14. Longest Common Prefix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "14. Longest Common Prefix.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F412DC1FB6B00BEF440 /* 3392. Count Subarrays of Length Three With a Condition.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3392. Count Subarrays of Length Three With a Condition.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F692DC25DC900BEF440 /* 1089. Duplicate Zeros.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1089. Duplicate Zeros.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F6A2DC2700300BEF440 /* Merge Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge Sorted Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670F922DC92DE200BEF440 /* 1128. Number of Equivalent Domino Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1128. Number of Equivalent Domino Pairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49670FBA2DCBCE7A00BEF440 /* 3341. Find Minimum Time to Reach Last Room I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3341. Find Minimum Time to Reach Last Room I.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		496E0B892DB90840006F15B4 /* 1399. Count Largest Group.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1399. Count Largest Group.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49833A942D58C5150051866D /* 84. Largest Rectangle in Histogram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "84. Largest Rectangle in Histogram.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		4991526A2D589650001F3780 /* AlgorithmsAndStructures.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = AlgorithmsAndStructures.xcodeproj; sourceTree = "<group>"; };
		499FFD8D2D63B3EA00569E33 /* Number of Islands (BFS).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Number of Islands (BFS).playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		499FFDCD2D646C7500569E33 /* Open the Lock.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Open the Lock.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		499FFE0D2D65A28400569E33 /* 1415. The k-th Lexicographical String of All Happy Strings of Length n.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1415. The k-th Lexicographical String of All Happy Strings of Length n.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52102D58969D0068EE55 /* 118. Pascal's Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "118. Pascal's Triangle.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52112D58969D0068EE55 /* 1694. Reformat Phone Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1694. Reformat Phone Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52122D58969D0068EE55 /* 1726. Tuple with Same Product.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1726. Tuple with Same Product.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52132D58969D0068EE55 /* 1752. Check if Array Is Sorted and Rotated.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1752. Check if Array Is Sorted and Rotated.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52142D58969D0068EE55 /* 1790. Check if One String Swap Can Make Strings Equal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1790. Check if One String Swap Can Make Strings Equal.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52152D58969D0068EE55 /* 1800. Maximum Ascending Subarray Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1800. Maximum Ascending Subarray Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52162D58969D0068EE55 /* 1920. Build Array from Permutation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1920. Build Array from Permutation.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52172D58969D0068EE55 /* 1929. Concatenation of Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1929. Concatenation of Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52182D58969D0068EE55 /* 2349. Design a Number Container System.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2349. Design a Number Container System.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB52192D58969D0068EE55 /* 2364. Count Number of Bad Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2364. Count Number of Bad Pairs.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB521A2D58969D0068EE55 /* 2769. Find the Maximum Achievable Number.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "2769. Find the Maximum Achievable Number.cpp"; sourceTree = "<group>"; };
		49AB521B2D58969D0068EE55 /* 3105. Longest Strictly Increasing or Strictly Decreasing Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3105. Longest Strictly Increasing or Strictly Decreasing Subarray.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49AB521C2D58969D0068EE55 /* 3151. Special Array I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3151. Special Array I.playground"; sourceTree = "<group>"; };
		49AB521D2D58969D0068EE55 /* 3160. Find the Number of Distinct Colors Among the Balls.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3160. Find the Number of Distinct Colors Among the Balls.playground"; sourceTree = "<group>"; };
		49AB521E2D58969D0068EE55 /* 100552. Find Valid Pair of Adjacent Digits in String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "100552. Find Valid Pair of Adjacent Digits in String.playground"; sourceTree = "<group>"; };
		49C1D5032DB3850A0065F846 /* 9. Palindrome Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "9. Palindrome Number.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49C1D52B2DB56D510065F846 /* 781. Rabbits in Forest.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "781. Rabbits in Forest.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D16BCE2DB6E04B000CF459 /* 1. Two Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1. Two Sum.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D2004D2D734AF30060ED5A /* 2460. Apply Operations to an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2460. Apply Operations to an Array.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D200842D7351C10060ED5A /* Q1. Transform Array by Parity.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Q1. Transform Array by Parity.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D200852D7352B80060ED5A /* Q2. Find the Number of Copy Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Q2. Find the Number of Copy Arrays.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D200862D735F690060ED5A /* Q3. Find Minimum Cost to Remove Array Elements.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Q3. Find Minimum Cost to Remove Array Elements.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D200BD2D74D5070060ED5A /* 2570. Merge Two 2D Arrays by Summing Values.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2570. Merge Two 2D Arrays by Summing Values.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D200F42D761C5F0060ED5A /* 2161. Partition Array According to Given Pivot.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "2161. Partition Array According to Given Pivot.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D201522D771CBE0060ED5A /* 1780. Check if Number is a Sum of Powers of Three.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1780. Check if Number is a Sum of Powers of Three.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49D2017A2D7737110060ED5A /* Decode String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Decode String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49F710102D66FD5A00FFB0E7 /* 1980. Find Unique Binary String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1980. Find Unique Binary String.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49F710472D67571800FFB0E7 /* Perfect Squares.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Perfect Squares.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49FC1D6F2DCF9B3E001C710F /* Q1. Find Most Frequent Vowel and Consonant.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Q1. Find Most Frequent Vowel and Consonant.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49FC1D702DCF9C4B001C710F /* Q2. Minimum Operations to Convert All Elements to Zero.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Q2. Minimum Operations to Convert All Elements to Zero.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		49FC1D712DD09E88001C710F /* 1550. Three Consecutive Odds.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "1550. Three Consecutive Odds.playground"; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
/* End PBXFileReference section */

/* Begin PBXFileSystemSynchronizedRootGroup section */
		4922336D2D579F1B00084FB1 /* Playground */ = {
			isa = PBXFileSystemSynchronizedRootGroup;
			path = Playground;
			sourceTree = "<group>";
		};
/* End PBXFileSystemSynchronizedRootGroup section */

/* Begin PBXGroup section */
		492232DC2D578D8F00084FB1 = {
			isa = PBXGroup;
			children = (
				49AB521F2D58969D0068EE55 /* LeetCode */,
				492232F52D578DDC00084FB1 /* Acmp */,
				492233302D578DDC00084FB1 /* Search */,
				492233362D578DDC00084FB1 /* Sort */,
				4922336D2D579F1B00084FB1 /* Playground */,
				492232E62D578D8F00084FB1 /* Products */,
			);
			sourceTree = "<group>";
		};
		492232E62D578D8F00084FB1 /* Products */ = {
			isa = PBXGroup;
			children = (
			);
			name = Products;
			sourceTree = "<group>";
		};
		492232F32D578DDC00084FB1 /* 712 */ = {
			isa = PBXGroup;
			children = (
				492232F12D578DDC00084FB1 /* 712.hpp */,
				492232F22D578DDC00084FB1 /* 712.cpp */,
			);
			path = 712;
			sourceTree = "<group>";
		};
		492232F52D578DDC00084FB1 /* Acmp */ = {
			isa = PBXGroup;
			children = (
				492232F32D578DDC00084FB1 /* 712 */,
				492232F42D578DDC00084FB1 /* main.cpp */,
			);
			path = Acmp;
			sourceTree = "<group>";
		};
		4922332B2D578DDC00084FB1 /* BinarySearch */ = {
			isa = PBXGroup;
			children = (
				492233292D578DDC00084FB1 /* binary_search.hpp */,
				4922332A2D578DDC00084FB1 /* binary_search.cpp */,
			);
			path = BinarySearch;
			sourceTree = "<group>";
		};
		4922332E2D578DDC00084FB1 /* LinearSearch */ = {
			isa = PBXGroup;
			children = (
				4922332C2D578DDC00084FB1 /* linear_search.hpp */,
				4922332D2D578DDC00084FB1 /* linear_search.cpp */,
			);
			path = LinearSearch;
			sourceTree = "<group>";
		};
		492233302D578DDC00084FB1 /* Search */ = {
			isa = PBXGroup;
			children = (
				4922332B2D578DDC00084FB1 /* BinarySearch */,
				4922332E2D578DDC00084FB1 /* LinearSearch */,
				4922332F2D578DDC00084FB1 /* main.cpp */,
			);
			path = Search;
			sourceTree = "<group>";
		};
		492233332D578DDC00084FB1 /* MergeSort */ = {
			isa = PBXGroup;
			children = (
				492233312D578DDC00084FB1 /* merge_sort.hpp */,
				492233322D578DDC00084FB1 /* merge_sort.cpp */,
			);
			path = MergeSort;
			sourceTree = "<group>";
		};
		492233362D578DDC00084FB1 /* Sort */ = {
			isa = PBXGroup;
			children = (
				492233332D578DDC00084FB1 /* MergeSort */,
				492233342D578DDC00084FB1 /* main.cpp */,
				492233352D578DDC00084FB1 /* MergeSort.playground */,
				491381892D6C599600D9F82B /* MergeSortAndCountInv.playground */,
			);
			path = Sort;
			sourceTree = "<group>";
		};
		4991526C2D589650001F3780 /* Products */ = {
			isa = PBXGroup;
			name = Products;
			sourceTree = "<group>";
		};
		49AB521F2D58969D0068EE55 /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				49AB52102D58969D0068EE55 /* 118. Pascal's Triangle.playground */,
				49AB52112D58969D0068EE55 /* 1694. Reformat Phone Number.playground */,
				49AB52122D58969D0068EE55 /* 1726. Tuple with Same Product.playground */,
				49AB52132D58969D0068EE55 /* 1752. Check if Array Is Sorted and Rotated.playground */,
				49AB52142D58969D0068EE55 /* 1790. Check if One String Swap Can Make Strings Equal.playground */,
				49AB52152D58969D0068EE55 /* 1800. Maximum Ascending Subarray Sum.playground */,
				49AB52162D58969D0068EE55 /* 1920. Build Array from Permutation.playground */,
				49AB52172D58969D0068EE55 /* 1929. Concatenation of Array.playground */,
				49AB52182D58969D0068EE55 /* 2349. Design a Number Container System.playground */,
				49AB52192D58969D0068EE55 /* 2364. Count Number of Bad Pairs.playground */,
				49AB521A2D58969D0068EE55 /* 2769. Find the Maximum Achievable Number.cpp */,
				49AB521B2D58969D0068EE55 /* 3105. Longest Strictly Increasing or Strictly Decreasing Subarray.playground */,
				49AB521C2D58969D0068EE55 /* 3151. Special Array I.playground */,
				49AB521D2D58969D0068EE55 /* 3160. Find the Number of Distinct Colors Among the Balls.playground */,
				49AB521E2D58969D0068EE55 /* 100552. Find Valid Pair of Adjacent Digits in String.playground */,
				49833A942D58C5150051866D /* 84. Largest Rectangle in Histogram.playground */,
				495D0CC62D5A05DC00BB9C8E /* 3174. Clear Digits.playground */,
				495D0CFD2D5B5EE200BB9C8E /* 1910. Remove All Occurrences of a Substring.playground */,
				495D0D342D5CA24100BB9C8E /* 2342. Max Sum of a Pair With Equal Sum of Digits.playground */,
				495D0D742D5DE18100BB9C8E /* 3066. Minimum Operations to Exceed Threshold Value II.playground */,
				499FFD8D2D63B3EA00569E33 /* Number of Islands (BFS).playground */,
				499FFDCD2D646C7500569E33 /* Open the Lock.playground */,
				499FFE0D2D65A28400569E33 /* 1415. The k-th Lexicographical String of All Happy Strings of Length n.playground */,
				49F710102D66FD5A00FFB0E7 /* 1980. Find Unique Binary String.playground */,
				49F710472D67571800FFB0E7 /* Perfect Squares.playground */,
				490A26EA2D685F0200A503FA /* Valid Parentheses.playground */,
				493EF6AF2D69A9B300BB4E5E /* Daily Temperatures.playground */,
				491381512D6AF7C600D9F82B /* Evaluate Reverse Polish Notation.playground */,
				491381522D6C468300D9F82B /* Number of Islands (DFS).playground */,
				4913828A2D703CFF00D9F82B /* CloneGraph.playground */,
				4913829D2D703D2200D9F82B /* Target Sum.playground */,
				491382D42D71A73000D9F82B /* Binary Tree Inorder Traversal.playground */,
				49D2004D2D734AF30060ED5A /* 2460. Apply Operations to an Array.playground */,
				49D200842D7351C10060ED5A /* Q1. Transform Array by Parity.playground */,
				49D200852D7352B80060ED5A /* Q2. Find the Number of Copy Arrays.playground */,
				49D200862D735F690060ED5A /* Q3. Find Minimum Cost to Remove Array Elements.playground */,
				49D200BD2D74D5070060ED5A /* 2570. Merge Two 2D Arrays by Summing Values.playground */,
				49D200F42D761C5F0060ED5A /* 2161. Partition Array According to Given Pivot.playground */,
				49D201522D771CBE0060ED5A /* 1780. Check if Number is a Sum of Powers of Three.playground */,
				49D2017A2D7737110060ED5A /* Decode String.playground */,
				491965852D78378A00197DCD /* 2579. Count Total Number of Colored Cells.playground */,
				491965AE2D784F6700197DCD /* Flood Fill.playground */,
				491965D62D799E4B00197DCD /* 2965. Find Missing and Repeated Values.playground */,
				491965FE2D7AFCB500197DCD /* 2523. Closest Prime Numbers in Range.playground */,
				491966262D7B84E000197DCD /* 01 Matrix.playground */,
				4919664E2D7C22CB00197DCD /* 2379. Minimum Recolors to Get K Consecutive Black Blocks.playground */,
				491966762D7D7A4100197DCD /* 3208. Alternating Groups II.playground */,
				4919669E2D7EDB0600197DCD /* 3306. Count of Substrings Containing Every Vowel and K Consonants II.playground */,
				4910F9F52D8181F100AA50D7 /* 2529. Maximum Count of Positive Integer and Negative Integer.playground */,
				4910FA1D2D82C2F600AA50D7 /* 3356. Zero Array Transformation II.playground */,
				4910FA452D873FC100AA50D7 /* 2594. Minimum Time to Repair Cars.playground */,
				4910FA942D881C5800AA50D7 /* 2206. Divide Array Into Equal Pairs.playground */,
				4910FABC2D8976C100AA50D7 /* 2401. Longest Nice Subarray.playground */,
				4910FB0B2D8EEF9600AA50D7 /* 1765. Map of Highest Peak.playground */,
				49360E1B2D918A51009C8F4D /* 3169. Count Days Without Meetings.playground */,
				49C1D5032DB3850A0065F846 /* 9. Palindrome Number.playground */,
				49C1D52B2DB56D510065F846 /* 781. Rabbits in Forest.playground */,
				49D16BCE2DB6E04B000CF459 /* 1. Two Sum.playground */,
				496E0B892DB90840006F15B4 /* 1399. Count Largest Group.playground */,
				49670EC62DBCB84200BEF440 /* 13. Roman to Integer.playground */,
				49670EEE2DBD1CA000BEF440 /* 841. Keys and Rooms.playground */,
				49670F162DBF6AC600BEF440 /* 485. Max Consecutive Ones.playground */,
				49670F172DBF6B0400BEF440 /* 1295. Find Numbers with Even Number of Digits.playground */,
				49670F182DBF6B3B00BEF440 /* 977. Squares of a Sorted Array.playground */,
				49670F192DC0989400BEF440 /* 14. Longest Common Prefix.playground */,
				49670F412DC1FB6B00BEF440 /* 3392. Count Subarrays of Length Three With a Condition.playground */,
				49670F692DC25DC900BEF440 /* 1089. Duplicate Zeros.playground */,
				49670F6A2DC2700300BEF440 /* Merge Sorted Array.playground */,
				49670F922DC92DE200BEF440 /* 1128. Number of Equivalent Domino Pairs.playground */,
				49670FBA2DCBCE7A00BEF440 /* 3341. Find Minimum Time to Reach Last Room I.playground */,
				49FC1D6F2DCF9B3E001C710F /* Q1. Find Most Frequent Vowel and Consonant.playground */,
				49FC1D702DCF9C4B001C710F /* Q2. Minimum Operations to Convert All Elements to Zero.playground */,
				49FC1D712DD09E88001C710F /* 1550. Three Consecutive Odds.playground */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXProject section */
		492232DD2D578D8F00084FB1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1610;
				LastUpgradeCheck = 1610;
			};
			buildConfigurationList = 492232E02D578D8F00084FB1 /* Build configuration list for PBXProject "AlgorithmsAndStructures" */;
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 492232DC2D578D8F00084FB1;
			minimizedProjectReferenceProxies = 1;
			packageReferences = (
				49D782592D57CF1F00B2B0FB /* XCLocalSwiftPackageReference "DataStructures" */,
				4910FB0C2D8EF6C400AA50D7 /* XCRemoteSwiftPackageReference "swift-collections" */,
			);
			preferredProjectObjectVersion = 77;
			productRefGroup = 492232E62D578D8F00084FB1 /* Products */;
			projectDirPath = "";
			projectReferences = (
				{
					ProductGroup = 4991526C2D589650001F3780 /* Products */;
					ProjectRef = 4991526A2D589650001F3780 /* AlgorithmsAndStructures.xcodeproj */;
				},
			);
			projectRoot = "";
			targets = (
			);
		};
/* End PBXProject section */

/* Begin XCBuildConfiguration section */
		492232EA2D578D8F00084FB1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MACOSX_DEPLOYMENT_TARGET = 15.1;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "DEBUG $(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		492232EB2D578D8F00084FB1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_USER_SCRIPT_SANDBOXING = YES;
				GCC_C_LANGUAGE_STANDARD = gnu17;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				LOCALIZATION_PREFERS_STRING_CATALOGS = YES;
				MACOSX_DEPLOYMENT_TARGET = 15.1;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		492232E02D578D8F00084FB1 /* Build configuration list for PBXProject "AlgorithmsAndStructures" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				492232EA2D578D8F00084FB1 /* Debug */,
				492232EB2D578D8F00084FB1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */

/* Begin XCLocalSwiftPackageReference section */
		49D782592D57CF1F00B2B0FB /* XCLocalSwiftPackageReference "DataStructures" */ = {
			isa = XCLocalSwiftPackageReference;
			relativePath = DataStructures;
		};
/* End XCLocalSwiftPackageReference section */

/* Begin XCRemoteSwiftPackageReference section */
		4910FB0C2D8EF6C400AA50D7 /* XCRemoteSwiftPackageReference "swift-collections" */ = {
			isa = XCRemoteSwiftPackageReference;
			repositoryURL = "https://github.com/apple/swift-collections.git";
			requirement = {
				kind = upToNextMajorVersion;
				minimumVersion = 1.1.4;
			};
		};
/* End XCRemoteSwiftPackageReference section */
	};
	rootObject = 492232DD2D578D8F00084FB1 /* Project object */;
}
